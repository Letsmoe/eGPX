/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.12.4
 * source: schemas/v1.1/Waypoint.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../google/protobuf/any";
import * as dependency_2 from "./Link";
import * as pb_1 from "google-protobuf";
export class Waypoint extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        lat?: number;
        lon?: number;
        ele?: number;
        time?: number;
        magvar?: number;
        geoidheight?: number;
        name?: string;
        cmt?: string;
        desc?: string;
        src?: string;
        link?: dependency_2.Link[];
        sym?: string;
        type?: string;
        fix?: string;
        sat?: number;
        hdop?: number;
        vdop?: number;
        pdop?: number;
        ageofdgpsdata?: number;
        dgpsid?: number;
        extensions?: Map<string, dependency_1.google.protobuf.Any>;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [11], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("lat" in data && data.lat != undefined) {
                this.lat = data.lat;
            }
            if ("lon" in data && data.lon != undefined) {
                this.lon = data.lon;
            }
            if ("ele" in data && data.ele != undefined) {
                this.ele = data.ele;
            }
            if ("time" in data && data.time != undefined) {
                this.time = data.time;
            }
            if ("magvar" in data && data.magvar != undefined) {
                this.magvar = data.magvar;
            }
            if ("geoidheight" in data && data.geoidheight != undefined) {
                this.geoidheight = data.geoidheight;
            }
            if ("name" in data && data.name != undefined) {
                this.name = data.name;
            }
            if ("cmt" in data && data.cmt != undefined) {
                this.cmt = data.cmt;
            }
            if ("desc" in data && data.desc != undefined) {
                this.desc = data.desc;
            }
            if ("src" in data && data.src != undefined) {
                this.src = data.src;
            }
            if ("link" in data && data.link != undefined) {
                this.link = data.link;
            }
            if ("sym" in data && data.sym != undefined) {
                this.sym = data.sym;
            }
            if ("type" in data && data.type != undefined) {
                this.type = data.type;
            }
            if ("fix" in data && data.fix != undefined) {
                this.fix = data.fix;
            }
            if ("sat" in data && data.sat != undefined) {
                this.sat = data.sat;
            }
            if ("hdop" in data && data.hdop != undefined) {
                this.hdop = data.hdop;
            }
            if ("vdop" in data && data.vdop != undefined) {
                this.vdop = data.vdop;
            }
            if ("pdop" in data && data.pdop != undefined) {
                this.pdop = data.pdop;
            }
            if ("ageofdgpsdata" in data && data.ageofdgpsdata != undefined) {
                this.ageofdgpsdata = data.ageofdgpsdata;
            }
            if ("dgpsid" in data && data.dgpsid != undefined) {
                this.dgpsid = data.dgpsid;
            }
            if ("extensions" in data && data.extensions != undefined) {
                this.extensions = data.extensions;
            }
        }
        if (!this.extensions)
            this.extensions = new Map();
    }
    get lat() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set lat(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get lon() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set lon(value: number) {
        pb_1.Message.setField(this, 2, value);
    }
    get ele() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set ele(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    get time() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set time(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    get magvar() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
    }
    set magvar(value: number) {
        pb_1.Message.setField(this, 5, value);
    }
    get geoidheight() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set geoidheight(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get name() {
        return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
    }
    set name(value: string) {
        pb_1.Message.setField(this, 7, value);
    }
    get cmt() {
        return pb_1.Message.getFieldWithDefault(this, 8, "") as string;
    }
    set cmt(value: string) {
        pb_1.Message.setField(this, 8, value);
    }
    get desc() {
        return pb_1.Message.getFieldWithDefault(this, 9, "") as string;
    }
    set desc(value: string) {
        pb_1.Message.setField(this, 9, value);
    }
    get src() {
        return pb_1.Message.getFieldWithDefault(this, 10, "") as string;
    }
    set src(value: string) {
        pb_1.Message.setField(this, 10, value);
    }
    get link() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Link, 11) as dependency_2.Link[];
    }
    set link(value: dependency_2.Link[]) {
        pb_1.Message.setRepeatedWrapperField(this, 11, value);
    }
    get sym() {
        return pb_1.Message.getFieldWithDefault(this, 12, "") as string;
    }
    set sym(value: string) {
        pb_1.Message.setField(this, 12, value);
    }
    get type() {
        return pb_1.Message.getFieldWithDefault(this, 13, "") as string;
    }
    set type(value: string) {
        pb_1.Message.setField(this, 13, value);
    }
    get fix() {
        return pb_1.Message.getFieldWithDefault(this, 14, "") as string;
    }
    set fix(value: string) {
        pb_1.Message.setField(this, 14, value);
    }
    get sat() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0) as number;
    }
    set sat(value: number) {
        pb_1.Message.setField(this, 15, value);
    }
    get hdop() {
        return pb_1.Message.getFieldWithDefault(this, 16, 0) as number;
    }
    set hdop(value: number) {
        pb_1.Message.setField(this, 16, value);
    }
    get vdop() {
        return pb_1.Message.getFieldWithDefault(this, 17, 0) as number;
    }
    set vdop(value: number) {
        pb_1.Message.setField(this, 17, value);
    }
    get pdop() {
        return pb_1.Message.getFieldWithDefault(this, 18, 0) as number;
    }
    set pdop(value: number) {
        pb_1.Message.setField(this, 18, value);
    }
    get ageofdgpsdata() {
        return pb_1.Message.getFieldWithDefault(this, 19, 0) as number;
    }
    set ageofdgpsdata(value: number) {
        pb_1.Message.setField(this, 19, value);
    }
    get dgpsid() {
        return pb_1.Message.getFieldWithDefault(this, 20, 0) as number;
    }
    set dgpsid(value: number) {
        pb_1.Message.setField(this, 20, value);
    }
    get extensions() {
        return pb_1.Message.getField(this, 21) as any as Map<string, dependency_1.google.protobuf.Any>;
    }
    set extensions(value: Map<string, dependency_1.google.protobuf.Any>) {
        pb_1.Message.setField(this, 21, value as any);
    }
    static fromObject(data: {
        lat?: number;
        lon?: number;
        ele?: number;
        time?: number;
        magvar?: number;
        geoidheight?: number;
        name?: string;
        cmt?: string;
        desc?: string;
        src?: string;
        link?: ReturnType<typeof dependency_2.Link.prototype.toObject>[];
        sym?: string;
        type?: string;
        fix?: string;
        sat?: number;
        hdop?: number;
        vdop?: number;
        pdop?: number;
        ageofdgpsdata?: number;
        dgpsid?: number;
        extensions?: {
            [key: string]: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>;
        };
    }): Waypoint {
        const message = new Waypoint({});
        if (data.lat != null) {
            message.lat = data.lat;
        }
        if (data.lon != null) {
            message.lon = data.lon;
        }
        if (data.ele != null) {
            message.ele = data.ele;
        }
        if (data.time != null) {
            message.time = data.time;
        }
        if (data.magvar != null) {
            message.magvar = data.magvar;
        }
        if (data.geoidheight != null) {
            message.geoidheight = data.geoidheight;
        }
        if (data.name != null) {
            message.name = data.name;
        }
        if (data.cmt != null) {
            message.cmt = data.cmt;
        }
        if (data.desc != null) {
            message.desc = data.desc;
        }
        if (data.src != null) {
            message.src = data.src;
        }
        if (data.link != null) {
            message.link = data.link.map(item => dependency_2.Link.fromObject(item));
        }
        if (data.sym != null) {
            message.sym = data.sym;
        }
        if (data.type != null) {
            message.type = data.type;
        }
        if (data.fix != null) {
            message.fix = data.fix;
        }
        if (data.sat != null) {
            message.sat = data.sat;
        }
        if (data.hdop != null) {
            message.hdop = data.hdop;
        }
        if (data.vdop != null) {
            message.vdop = data.vdop;
        }
        if (data.pdop != null) {
            message.pdop = data.pdop;
        }
        if (data.ageofdgpsdata != null) {
            message.ageofdgpsdata = data.ageofdgpsdata;
        }
        if (data.dgpsid != null) {
            message.dgpsid = data.dgpsid;
        }
        if (typeof data.extensions == "object") {
            message.extensions = new Map(Object.entries(data.extensions).map(([key, value]) => [key, dependency_1.google.protobuf.Any.fromObject(value)]));
        }
        return message;
    }
    toObject() {
        const data: {
            lat?: number;
            lon?: number;
            ele?: number;
            time?: number;
            magvar?: number;
            geoidheight?: number;
            name?: string;
            cmt?: string;
            desc?: string;
            src?: string;
            link?: ReturnType<typeof dependency_2.Link.prototype.toObject>[];
            sym?: string;
            type?: string;
            fix?: string;
            sat?: number;
            hdop?: number;
            vdop?: number;
            pdop?: number;
            ageofdgpsdata?: number;
            dgpsid?: number;
            extensions?: {
                [key: string]: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>;
            };
        } = {};
        if (this.lat != null) {
            data.lat = this.lat;
        }
        if (this.lon != null) {
            data.lon = this.lon;
        }
        if (this.ele != null) {
            data.ele = this.ele;
        }
        if (this.time != null) {
            data.time = this.time;
        }
        if (this.magvar != null) {
            data.magvar = this.magvar;
        }
        if (this.geoidheight != null) {
            data.geoidheight = this.geoidheight;
        }
        if (this.name != null) {
            data.name = this.name;
        }
        if (this.cmt != null) {
            data.cmt = this.cmt;
        }
        if (this.desc != null) {
            data.desc = this.desc;
        }
        if (this.src != null) {
            data.src = this.src;
        }
        if (this.link != null) {
            data.link = this.link.map((item: dependency_2.Link) => item.toObject());
        }
        if (this.sym != null) {
            data.sym = this.sym;
        }
        if (this.type != null) {
            data.type = this.type;
        }
        if (this.fix != null) {
            data.fix = this.fix;
        }
        if (this.sat != null) {
            data.sat = this.sat;
        }
        if (this.hdop != null) {
            data.hdop = this.hdop;
        }
        if (this.vdop != null) {
            data.vdop = this.vdop;
        }
        if (this.pdop != null) {
            data.pdop = this.pdop;
        }
        if (this.ageofdgpsdata != null) {
            data.ageofdgpsdata = this.ageofdgpsdata;
        }
        if (this.dgpsid != null) {
            data.dgpsid = this.dgpsid;
        }
        if (this.extensions != null) {
            data.extensions = (Object.fromEntries)((Array.from)(this.extensions).map(([key, value]) => [key, value.toObject()]));
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.lat != 0)
            writer.writeFloat(1, this.lat);
        if (this.lon != 0)
            writer.writeFloat(2, this.lon);
        if (this.ele != 0)
            writer.writeFloat(3, this.ele);
        if (this.time != 0)
            writer.writeInt64(4, this.time);
        if (this.magvar != 0)
            writer.writeFloat(5, this.magvar);
        if (this.geoidheight != 0)
            writer.writeFloat(6, this.geoidheight);
        if (this.name.length)
            writer.writeString(7, this.name);
        if (this.cmt.length)
            writer.writeString(8, this.cmt);
        if (this.desc.length)
            writer.writeString(9, this.desc);
        if (this.src.length)
            writer.writeString(10, this.src);
        if (this.link.length)
            writer.writeRepeatedMessage(11, this.link, (item: dependency_2.Link) => item.serialize(writer));
        if (this.sym.length)
            writer.writeString(12, this.sym);
        if (this.type.length)
            writer.writeString(13, this.type);
        if (this.fix.length)
            writer.writeString(14, this.fix);
        if (this.sat != 0)
            writer.writeInt32(15, this.sat);
        if (this.hdop != 0)
            writer.writeFloat(16, this.hdop);
        if (this.vdop != 0)
            writer.writeFloat(17, this.vdop);
        if (this.pdop != 0)
            writer.writeFloat(18, this.pdop);
        if (this.ageofdgpsdata != 0)
            writer.writeFloat(19, this.ageofdgpsdata);
        if (this.dgpsid != 0)
            writer.writeInt32(20, this.dgpsid);
        for (const [key, value] of this.extensions) {
            writer.writeMessage(21, this.extensions, () => {
                writer.writeString(1, key);
                writer.writeMessage(2, value, () => value.serialize(writer));
            });
        }
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Waypoint {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Waypoint();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.lat = reader.readFloat();
                    break;
                case 2:
                    message.lon = reader.readFloat();
                    break;
                case 3:
                    message.ele = reader.readFloat();
                    break;
                case 4:
                    message.time = reader.readInt64();
                    break;
                case 5:
                    message.magvar = reader.readFloat();
                    break;
                case 6:
                    message.geoidheight = reader.readFloat();
                    break;
                case 7:
                    message.name = reader.readString();
                    break;
                case 8:
                    message.cmt = reader.readString();
                    break;
                case 9:
                    message.desc = reader.readString();
                    break;
                case 10:
                    message.src = reader.readString();
                    break;
                case 11:
                    reader.readMessage(message.link, () => pb_1.Message.addToRepeatedWrapperField(message, 11, dependency_2.Link.deserialize(reader), dependency_2.Link));
                    break;
                case 12:
                    message.sym = reader.readString();
                    break;
                case 13:
                    message.type = reader.readString();
                    break;
                case 14:
                    message.fix = reader.readString();
                    break;
                case 15:
                    message.sat = reader.readInt32();
                    break;
                case 16:
                    message.hdop = reader.readFloat();
                    break;
                case 17:
                    message.vdop = reader.readFloat();
                    break;
                case 18:
                    message.pdop = reader.readFloat();
                    break;
                case 19:
                    message.ageofdgpsdata = reader.readFloat();
                    break;
                case 20:
                    message.dgpsid = reader.readInt32();
                    break;
                case 21:
                    reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.extensions as any, reader, reader.readString, () => {
                        let value;
                        reader.readMessage(message, () => value = dependency_1.google.protobuf.Any.deserialize(reader));
                        return value;
                    }));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): Waypoint {
        return Waypoint.deserialize(bytes);
    }
}
